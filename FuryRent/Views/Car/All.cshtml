@model AllCarsQueryModel

<head>
	@{
		ViewData["Title"] = "All Cars";
	}
	<link href="~/css/site.css" />
</head>


<h2 class="text-center">@ViewData["Title"]</h2>

<hr />
<form method="get">
	<div class="row">
		<div class="form-group col-md-3">
			<label asp-for="Make"></label> <input asp-for="Make" class="form-control" placeholder="...">
		</div>
		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="Sorting"></label>
				<select asp-for="Sorting" class="form-control">
					<option value="0">Make</option>
					<option value="1">Horsepower</option>
					<option value="2">Year</option>
					<option value="3">Price</option>
				</select>
			</div>
		</div>
		<div class="col-md-3">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Search" class="btn btn-danger" />
			</div>
		</div>
	</div>
</form>

<div>
	<a class="btn btn-outline-success" asp-area="" asp-controller="Car" asp-action="Add">Add a car</a>
</div>

@if (!Model.Cars.Any())
{
	<div class="alert alert-danger mt-2 text-center fw-bold" role="alert">
		No cars found by given criteria!
	</div>
}

<div class="card-deck">
	@foreach (var car in Model.Cars)
	{
		<div class="card border-1 border-danger mb-3" style="width: 45rem;">
			<img src="@car.ImageUrl" class="card-img-top" alt="@car.Make @car.Model">
			<div class="card-body">
				<h5 class="card-title">@car.Make @car.Model</h5>
				<p class="card-model">@car.PricePerDay$ /day</p>
				<a asp-controller="Car" asp-action="Details" asp-route-id="@car.Id" class="btn btn-danger">Details</a>
				<a asp-controller="Car" asp-action="All" asp-route-id="@car.Id" class="btn btn-danger">Rent</a>
			</div>
		</div>
	}
</div>

@{
	var previousPage = Model.CurrentPage - 1; if (previousPage < 1) { previousPage = 1; }
	var maxPage = Math.Ceiling((double)Model.TotalCarsCount / AllCarsQueryModel.CarsPerPage);
}

<div class="row mb-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-danger @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Car"
		   asp-action="All"
		   asp-route-currentPage="@previousPage"
		   asp-route-searchTerm="@Model.Make"
		   asp-route-sorting="@((int)Model.Sorting)"><<</a>
	</div>

	@{
		var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Cars.Any();
	}

	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-danger
		@(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Car"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-searchTerm="@Model.Make"
		   asp-route-sorting="@((int)Model.Sorting)">>></a>
	</div>
</div>
